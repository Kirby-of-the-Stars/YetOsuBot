plugins {
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'java'
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(21))
    }
}

group = 'com.day'
version = '0.0.3'
archivesBaseName = 'YetOsuBot'

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
    maven { url 'https://maven.fabricmc.net/' }//for kbc mixin(not for use)
    maven { url 'https://repo.panda-lang.org/releases' }//for litecommand
}

dependencies {
    compileOnly 'com.github.SNWCreations:KooKBC:f0987a7f0f'

    implementation 'org.xerial:sqlite-jdbc:3.46.0.0'
    // lombok
    compileOnly 'org.projectlombok:lombok:1.18.32'
    annotationProcessor 'org.projectlombok:lombok:1.18.32'

    implementation 'com.squareup.okhttp3:okhttp:4.12.0'

    implementation 'org.dromara.hutool:hutool-core:6.0.0-M16'
    implementation 'org.dromara.hutool:hutool-setting:6.0.0-M16'
    implementation 'org.dromara.hutool:hutool-json:6.0.0-M16'
    implementation 'org.dromara.hutool:hutool-http:6.0.0-M16'

    implementation 'org.apache.commons:commons-dbcp2:2.12.0'
    runtimeOnly 'org.xerial:sqlite-jdbc:3.46.0.0'

    implementation 'net.java.dev.jna:jna:5.13.0'
    implementation 'com.mybatis-flex:mybatis-flex-core:1.9.3'
    annotationProcessor 'com.mybatis-flex:mybatis-flex-processor:1.9.3'

    testImplementation 'ch.qos.logback:logback-classic:1.5.6'
    testImplementation 'ch.qos.logback:logback-core:1.5.6'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.3'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.3'
    testRuntimeOnly 'com.github.SNWCreations:KooKBC:f0987a7f0f'
}

def outPutDir = 'C:\\Users\\Time\\Desktop\\project\\debugkbc\\osuBotNew\\plugins'


shadowJar {
    archiveClassifier = ''
    dependencies {
        exclude(dependency('org.slf4j:slf4j-api'))
    }
}

build {
    doFirst {
        delete fileTree(dir: file(outPutDir), include: "**/*.jar")
    }
    dependsOn shadowJar
    doLast {
        copy {
            from layout.buildDirectory.dir("/libs")
            into file(outPutDir)
            include("*.jar")
        }
    }
}
tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"
}
test {
    //if u need to use unit test
//    useJUnitPlatform()
}